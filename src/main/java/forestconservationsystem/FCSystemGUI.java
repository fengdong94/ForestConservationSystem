/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forestconservationsystem;

import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import io.grpc.stub.StreamObserver;
import generated.grpc.monitoralertservice.FireAlert;
import generated.grpc.monitoralertservice.SensorReading;
import generated.grpc.monitoralertservice.SensorReading.SensorType;
import generated.grpc.monitoralertservice.AverageData;
import generated.grpc.animaltrackerservice.LocationUpdate;

/**
 *
 * @author fred
 */
public class FCSystemGUI extends javax.swing.JFrame {
    FCSystemClient1 fcSystemClient;
    StreamObserver<SensorReading> streamSensorDataRequestObserver;

    /**
     * Creates new form FCSystemGUI
     * @throws java.lang.Exception
     */
    public FCSystemGUI() throws Exception {
        initComponents();
        fcSystemClient = new FCSystemClient1();
        sendButton.setVisible(false);
        getAverageButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        MonitorAlertServiceLabel = new javax.swing.JLabel();
        unaryCheckFireRiskLabel = new javax.swing.JLabel();
        averageTemperatureLabel = new javax.swing.JLabel();
        avgTempTextField = new javax.swing.JTextField();
        avgHumiTextField = new javax.swing.JTextField();
        averageHumidityLabel = new javax.swing.JLabel();
        averageCO2Label = new javax.swing.JLabel();
        avgCo2TextField = new javax.swing.JTextField();
        checkFireRiskButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        clientStreamingStreamSensorDataLabel = new javax.swing.JLabel();
        sensorIdLabel = new javax.swing.JLabel();
        sensorIdTextField = new javax.swing.JTextField();
        sensorTypeLabel = new javax.swing.JLabel();
        sensorTypeComboBox = new javax.swing.JComboBox<>();
        valueLabel = new javax.swing.JLabel();
        valueTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        getAverageButton = new javax.swing.JButton();
        prepareClientStreamButton = new javax.swing.JButton();
        animalTrackerServiceLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        trackButton = new javax.swing.JButton();
        animalIdLabel = new javax.swing.JLabel();
        updateIntervalLabel = new javax.swing.JLabel();
        updateIntervalTextField = new javax.swing.JTextField();
        animalIdTextField = new javax.swing.JTextField();

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MonitorAlertServiceLabel.setText("Monitor Alert Service");

        unaryCheckFireRiskLabel.setText("Unary - CheckFireRisk");

        averageTemperatureLabel.setText("Average Temperature");

        avgTempTextField.setText("0");
        avgTempTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgTempTextFieldActionPerformed(evt);
            }
        });

        avgHumiTextField.setText("0");
        avgHumiTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgHumiTextFieldActionPerformed(evt);
            }
        });

        averageHumidityLabel.setText("Average Humidity");

        averageCO2Label.setText("Average CO2");

        avgCo2TextField.setText("0");

        checkFireRiskButton.setBackground(new java.awt.Color(51, 204, 0));
        checkFireRiskButton.setText("Check Fire Risk");
        checkFireRiskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFireRiskButtonActionPerformed(evt);
            }
        });

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        jScrollPane1.setViewportView(resultTextArea);

        jLabel10.setText("Result");

        clientStreamingStreamSensorDataLabel.setText("Client Streaming - StreamSensorData");

        sensorIdLabel.setText("Sensor ID");

        sensorIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorIdTextFieldActionPerformed(evt);
            }
        });

        sensorTypeLabel.setText("Sensor Type");

        sensorTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TEMPERATURE", "HUMIDITY", "CO2" }));
        sensorTypeComboBox.setSelectedIndex(0);
        sensorTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorTypeComboBoxActionPerformed(evt);
            }
        });

        valueLabel.setText("Value");

        valueTextField.setText("0");
        valueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueTextFieldActionPerformed(evt);
            }
        });

        sendButton.setBackground(new java.awt.Color(51, 204, 255));
        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        getAverageButton.setBackground(new java.awt.Color(0, 204, 0));
        getAverageButton.setText("Get Average");
        getAverageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getAverageButtonActionPerformed(evt);
            }
        });

        prepareClientStreamButton.setBackground(new java.awt.Color(255, 204, 51));
        prepareClientStreamButton.setText("Prepare Client Stream");
        prepareClientStreamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepareClientStreamButtonActionPerformed(evt);
            }
        });

        animalTrackerServiceLabel.setText("Animal Tracker Service");

        jLabel1.setText("Server Streaming - StreamAnimalLocations");

        trackButton.setBackground(new java.awt.Color(102, 204, 0));
        trackButton.setText("Track");
        trackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackButtonActionPerformed(evt);
            }
        });

        animalIdLabel.setText("Animal ID");

        updateIntervalLabel.setText("Update Interval");

        updateIntervalTextField.setText("1");
        updateIntervalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateIntervalTextFieldActionPerformed(evt);
            }
        });

        animalIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animalIdTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clientStreamingStreamSensorDataLabel)
                                    .addComponent(prepareClientStreamButton)
                                    .addComponent(MonitorAlertServiceLabel))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sensorIdLabel)
                                    .addComponent(sensorIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sensorTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sensorTypeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(valueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(sendButton))
                                    .addComponent(valueLabel))))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(unaryCheckFireRiskLabel)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(avgTempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(averageTemperatureLabel)))
                            .addComponent(animalTrackerServiceLabel)
                            .addComponent(jLabel1))
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(animalIdLabel)
                                    .addComponent(averageHumidityLabel)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(animalIdTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(avgHumiTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(avgCo2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(averageCO2Label)
                                    .addComponent(updateIntervalLabel)
                                    .addComponent(updateIntervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(116, 116, 116)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkFireRiskButton)
                    .addComponent(getAverageButton)
                    .addComponent(trackButton))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(MonitorAlertServiceLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sensorIdLabel)
                    .addComponent(sensorTypeLabel)
                    .addComponent(valueLabel)
                    .addComponent(clientStreamingStreamSensorDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sensorIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sensorTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton)
                    .addComponent(getAverageButton)
                    .addComponent(prepareClientStreamButton))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(averageCO2Label)
                            .addComponent(averageHumidityLabel)
                            .addComponent(averageTemperatureLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avgCo2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkFireRiskButton)
                            .addComponent(avgHumiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(avgTempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(unaryCheckFireRiskLabel)))
                .addGap(37, 37, 37)
                .addComponent(animalTrackerServiceLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateIntervalLabel)
                    .addComponent(animalIdLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateIntervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(animalIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trackButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void avgTempTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgTempTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_avgTempTextFieldActionPerformed

    private void avgHumiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgHumiTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_avgHumiTextFieldActionPerformed

    private void checkFireRiskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFireRiskButtonActionPerformed
        float avgTemp = 0, avgHumi = 0, avgCo2 = 0;
        try {
            avgTemp = Float.parseFloat(avgTempTextField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "please enter a valid numer for Average Temperature");
        }
        try {
            avgHumi = Float.parseFloat(avgHumiTextField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "please enter a valid numer for Average Humidity");
        }
        try {
            avgCo2 = Float.parseFloat(avgCo2TextField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "please enter a valid numer for Average CO2");
        }
        
        FireAlert fireAlert = fcSystemClient.checkFireRisk(avgTemp, avgHumi, avgCo2);
        resultTextArea.setText("Fire risk level: " + fireAlert.getLevel());
    }//GEN-LAST:event_checkFireRiskButtonActionPerformed

    private void sensorTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensorTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sensorTypeComboBoxActionPerformed

    private void valueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueTextFieldActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        float value = 0;
        try {
            value = Float.parseFloat(valueTextField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "please enter a valid numer for Value");
        }
        try {
            String sensorId = sensorIdTextField.getText().trim();
            String sensorTypeName = (String) sensorTypeComboBox.getSelectedItem();
            SensorType sensorType = SensorType.valueOf(sensorTypeName);
            
            streamSensorDataRequestObserver.onNext(
                    SensorReading.newBuilder()
                            .setSensorId(sensorId)
                            .setType(sensorType)
                            .setValue(value)
                            .build()
            );
        } catch (RuntimeException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void prepareClientStreamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepareClientStreamButtonActionPerformed
        StreamObserver<AverageData> responseObserver = new StreamObserver<AverageData>() {
            @Override
            public void onNext(AverageData averageData) {
                System.out.println("################### streamSensorData response from server " + averageData.toString());
                resultTextArea.setText(averageData.toString());
            }

            @Override
            public void onError(Throwable t) {
                t.printStackTrace();
            }

            @Override
            public void onCompleted() {
                System.out.println("################## streamSensorData client stream is completed.");
                sendButton.setVisible(false);
                getAverageButton.setVisible(false);
            }
        };
        
        
        streamSensorDataRequestObserver = fcSystemClient.streamSensorData(responseObserver);
        resultTextArea.setText("Ready to accept values for streamSensorData service");
        sendButton.setVisible(true);
        getAverageButton.setVisible(true);
    }//GEN-LAST:event_prepareClientStreamButtonActionPerformed

    private void getAverageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAverageButtonActionPerformed
        streamSensorDataRequestObserver.onCompleted();
    }//GEN-LAST:event_getAverageButtonActionPerformed

    private void sensorIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensorIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sensorIdTextFieldActionPerformed

    private void trackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackButtonActionPerformed
        String animalId = animalIdTextField.getText().trim();
        int updateInterval = 1;
        try {
            updateInterval = Integer.parseInt(updateIntervalTextField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "please enter a valid numer for Update Interval");
        }
        
        StringBuffer resultString = new StringBuffer();
        
        StreamObserver<LocationUpdate> responseObserver = new StreamObserver<LocationUpdate> () {
            int count = 0;
            
            @Override
            public void onNext(LocationUpdate locationUpdate) {
                System.out.println("################## Client received locationUpdates: " + locationUpdate.toString());
                resultString.append(locationUpdate.toString());
                resultString.append("\n");
                resultTextArea.setText(resultString.toString());
                count++;
            }

            @Override
            public void onError(Throwable t) {
                t.printStackTrace();
            }

            @Override
            public void onCompleted() {
                System.out.println("################## AnimalTrackerService stream is completed ... received " + count + " rand updates");
            }
        };
        
        fcSystemClient.streamAnimalLocations(responseObserver, animalId, updateInterval);
    }//GEN-LAST:event_trackButtonActionPerformed

    private void updateIntervalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateIntervalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateIntervalTextFieldActionPerformed

    private void animalIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animalIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_animalIdTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FCSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FCSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FCSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FCSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FCSystemGUI().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(FCSystemGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MonitorAlertServiceLabel;
    private javax.swing.JLabel animalIdLabel;
    private javax.swing.JTextField animalIdTextField;
    private javax.swing.JLabel animalTrackerServiceLabel;
    private javax.swing.JLabel averageCO2Label;
    private javax.swing.JLabel averageHumidityLabel;
    private javax.swing.JLabel averageTemperatureLabel;
    private javax.swing.JTextField avgCo2TextField;
    private javax.swing.JTextField avgHumiTextField;
    private javax.swing.JTextField avgTempTextField;
    private javax.swing.JButton checkFireRiskButton;
    private javax.swing.JLabel clientStreamingStreamSensorDataLabel;
    private javax.swing.JButton getAverageButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton prepareClientStreamButton;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel sensorIdLabel;
    private javax.swing.JTextField sensorIdTextField;
    private javax.swing.JComboBox<String> sensorTypeComboBox;
    private javax.swing.JLabel sensorTypeLabel;
    private javax.swing.JButton trackButton;
    private javax.swing.JLabel unaryCheckFireRiskLabel;
    private javax.swing.JLabel updateIntervalLabel;
    private javax.swing.JTextField updateIntervalTextField;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTextField valueTextField;
    // End of variables declaration//GEN-END:variables
}
